buildscript {
    ext {
        springBootVersion = '2.6.15'
        set('springCloudVersion', "Hoxton.SR3")

        // log4j2 버전 변경
        set('log4j2.version', '2.17.1')
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.ustraframework.kro.kr/repository/maven-public/" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE')
        classpath("io.franzbecker:gradle-lombok:1.8")
    }
}

// configuration setting version
configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'ch.qos.logback') {
			details.useVersion '1.2.9'
		}

		if (details.requested.group == 'org.apache.logging.log4j') {
			details.useVersion '2.17.1'
		}
	}
}

allprojects {
    group = 'sample.ustraframework.java'
    version = '0.0.1-SNAPSHOT'
}

subprojects {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'eclipse'


    sourceCompatibility = 1.8
    targetCompatibility = 1.8

	eclipse {
		classpath { downloadSources=true }
	}


    ext {
        set('springCloudVersion', "Hoxton.SR3")
        ustraVersion = '2.3.0.RELEASE'
    }


    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }

        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }

    repositories {
      	mavenCentral()
	    maven { url "https://repo.ustraframework.kro.kr/repository/maven-public/" }
    }

    dependencies {

    	implementation 'ch.qos.logback:logback-core:1.2.9'
        implementation 'ch.qos.logback:logback-classic:1.2.9'

		implementation 'org.apache.logging.log4j:log4j-to-slf4j:2.17.1'
		implementation 'org.apache.logging.log4j:log4j-api:2.17.1'

        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

      	compileOnly 'org.projectlombok:lombok'
        compile 'org.springframework.boot:spring-boot-starter-aop'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok:1.18.20'

        testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
        testCompileOnly 'org.projectlombok:lombok:1.18.20'

        implementation 'org.postgresql:postgresql:42.3.3'

    }
}
